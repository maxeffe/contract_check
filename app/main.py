from models.user import User
from models.admin import Admin
from models.document import Document
from models.model import Model
from database.config import get_settings
from database.database import get_session, init_db, engine
from sqlmodel import Session



def create_demo_data():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    
    demo_user = User(
        id=1,
        username="demo_user",
        email="demo@example.com",
        password=User.hash_password("password123"),
    )
    print(f"–°–æ–∑–¥–∞–Ω –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {demo_user.username}")
    
    admin = Admin(
        user_id=2,
        username="admin",
        email="admin@lawfirm.ru",
        password=User.hash_password("admin_password")
    )
    print(f"–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin.username}")
    
    return demo_user, admin


def test_basic_functionality(admin):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π ===")
    
    from models.wallet import Wallet
    wallet = Wallet(user_id=1)
    print(f"–°–æ–∑–¥–∞–Ω –∫–æ—à–µ–ª–µ–∫ —Å –±–∞–ª–∞–Ω—Å–æ–º: {wallet.balance}")
    
    tx1 = wallet.credit(100, "initial_topup") 
    print(f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ 100: –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å {wallet.balance}")
    
    tx2 = admin.credit_user(wallet, 50, "admin_bonus")
    print(f"–ê–¥–º–∏–Ω –Ω–∞—á–∏—Å–ª–∏–ª –±–æ–Ω—É—Å 50: –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å {wallet.balance}")
    print(f"–†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin.role}")

    try:
        tx3 = wallet.debit(30, "service_payment")
        print(f"–°–ø–∏—Å–∞–Ω–∏–µ 30: –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å {wallet.balance}")
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {e}")
    
    transactions = wallet.get_transactions()
    print(f"–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(transactions)}")
    for i, tx in enumerate(transactions, 1):
        print(f"{i}. {tx.tx_type} - {tx.amount} –∫—Ä–µ–¥–∏—Ç–æ–≤")

def test_document_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    print("\n=== –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ===")
    
    document = Document(
        id=1,
        user_id=1,
        filename="test_contract.pdf",
        raw_text="–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–∂–¥—É –û–û–û '–ü–æ—Å—Ç–∞–≤—â–∏–∫' –∏ –û–û–û '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å'",
        pages=5,
        language="RU",
    )
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {document.filename}")
    print(f"–°—Ç—Ä–∞–Ω–∏—Ü: {document.pages}, —è–∑—ã–∫: {document.language}")
    
    model = Model("Legal-Analyzer-RU", price_per_page=3)
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–µ–ª—å: {model.name}")
    print(f"–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: {model.price_per_page} –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    
    total_cost = document.pages * model.price_per_page
    print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: {total_cost} –∫—Ä–µ–¥–∏—Ç–æ–≤")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤")
    
    init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    demo_user, admin = create_demo_data()
    

    test_basic_functionality(admin)
    

    test_document_processing()


