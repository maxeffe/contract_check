import streamlit as st
import sys
import os
import pandas as pd
import plotly.express as px
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from services.auth_service import check_authentication, show_user_info
from services.api_client import get_api_client
from utils.helpers import (
    format_datetime, format_currency, SessionManager
)
from components.visualization import display_wallet_chart
from utils.style_loader import load_theme

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—É –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è Streamlit —ç–ª–µ–º–µ–Ω—Ç–æ–≤
load_theme()

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï SIDEBAR - –ß–ï–†–ù–´–ô –§–û–ù –° –°–ï–†–´–ú–ò –ö–ù–û–ü–ö–ê–ú–ò
st.markdown("""
<style>
/* SIDEBAR: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–û –ß–ï–†–ù–´–ô - –í–°–ï –≠–õ–ï–ú–ï–ù–¢–´ */
section[data-testid="stSidebar"] *,
section[data-testid="stSidebar"],
section[data-testid="stSidebar"] > div,
section[data-testid="stSidebar"] > div > div,
section[data-testid="stSidebar"] > div > div > div,
section[data-testid="stSidebar"] > div > div > div > div,
[data-testid="stSidebar"] *,
[data-testid="stSidebar"],
[data-testid="stSidebar"] > div,
[data-testid="stSidebar"] > div > div,
.css-1d391kg, .css-1lcbmhc, .css-1aumxhk {
    background: #1a1a1a !important;
    background-color: #1a1a1a !important;
}

/* –ù–ï –î–ê–í–ê–¢–¨ –ö–ù–û–ü–ö–ê–ú –ò –ò–• –¢–ï–ö–°–¢–£ –ù–ê–°–õ–ï–î–û–í–ê–¢–¨ –ß–ï–†–ù–´–ô –§–û–ù */
section[data-testid="stSidebar"] button,
section[data-testid="stSidebar"] .stButton > button {
    background: #555555 !important;
    background-color: #555555 !important;
}

/* –ü–†–û–ó–†–ê–ß–ù–´–ô –§–û–ù –î–õ–Ø –¢–ï–ö–°–¢–ê –í–ù–£–¢–†–ò –ö–ù–û–ü–û–ö SIDEBAR */
section[data-testid="stSidebar"] button *,
section[data-testid="stSidebar"] .stButton > button *,
section[data-testid="stSidebar"] button div,
section[data-testid="stSidebar"] button span {
    background: transparent !important;
    background-color: transparent !important;
    color: #ffffff !important;
}

/* SIDEBAR: –ö–ù–û–ü–ö–ò - –°–ï–†–´–ï –° –ß–ï–¢–ö–ò–ú –ë–ï–õ–´–ú –¢–ï–ö–°–¢–û–ú */
section[data-testid="stSidebar"] button,
section[data-testid="stSidebar"] .stButton > button,
section[data-testid="stSidebar"] [role="button"] {
    background-color: #555555 !important;
    color: #ffffff !important;
    border: 2px solid #777777 !important;
    font-weight: 600 !important;
    font-size: 14px !important;
}

section[data-testid="stSidebar"] button:hover,
section[data-testid="stSidebar"] .stButton > button:hover {
    background-color: #666666 !important;
    color: #ffffff !important;
    border: 2px solid #888888 !important;
}

/* SIDEBAR: –ë–ï–õ–´–ô –¢–ï–ö–°–¢ */
section[data-testid="stSidebar"] .stMarkdown,
section[data-testid="stSidebar"] h1,
section[data-testid="stSidebar"] p,
section[data-testid="stSidebar"] div {
    color: #ffffff !important;
}
</style>
""", unsafe_allow_html=True)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
if check_authentication():
    show_user_info()
else:
    st.error("üîí –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    st.stop()

st.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º")
st.markdown("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º –∏ –∏—Å—Ç–æ—Ä–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")

# –ü–æ–ª—É—á–∞–µ–º API –∫–ª–∏–µ–Ω—Ç
api_client = get_api_client()

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ
@st.cache_data(ttl=10)  # –ö–µ—à–∏—Ä—É–µ–º –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å–∞
def load_wallet_info():
    try:
        return api_client.get_wallet_info()
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ: {e}")
        return None

@st.cache_data(ttl=30)  # –ö–µ—à–∏—Ä—É–µ–º –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
def load_transaction_history(limit=50):
    try:
        return api_client.get_transaction_history(limit=limit)
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {e}")
        return {"transactions": [], "total_count": 0}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
col1, col2 = st.columns([4, 1])
with col2:
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", use_container_width=True):
        SessionManager.clear_cache()
        st.rerun()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
with st.spinner("üí∞ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–µ..."):
    wallet_info = load_wallet_info()

if wallet_info:
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ
    st.markdown("### üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å")
    
    balance = float(wallet_info.get('balance', 0))
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            "üíµ –î–æ—Å—Ç—É–ø–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
            format_currency(balance),
            help="–î–æ—Å—Ç—É–ø–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤"
        )
    
    with col2:
        total_transactions = wallet_info.get('total_transactions', 0)
        st.metric(
            "üìä –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
            total_transactions,
            help="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫–æ—à–µ–ª—å–∫–æ–º"
        )
    
    with col3:
        avg_cost = wallet_info.get('average_analysis_cost', 0)
        if avg_cost > 0:
            remaining_analyses = int(balance // avg_cost)
            st.metric(
                "üî¢ –î–æ—Å—Ç—É–ø–Ω–æ –∞–Ω–∞–ª–∏–∑–æ–≤",
                f"~{remaining_analyses}",
                help="–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å"
            )
        else:
            st.empty()
    
    with col4:
        st.empty()

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –±–∞–ª–∞–Ω—Å–µ
if wallet_info:
    balance = float(wallet_info.get('balance', 0))
    if balance < 10:
        st.error("‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á–µ—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.")
    elif balance < 50:
        st.warning("‚ö†Ô∏è –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç.")
    elif balance > 1000:
        st.success("üíé –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å! –£ –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∞–Ω–∞–ª–∏–∑–æ–≤.")

st.markdown("---")

# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
st.markdown("### üíµ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞")

with st.form("credit_wallet_form"):
    col1, col2 = st.columns([2, 1])
    
    with col1:
        amount = st.number_input(
            "–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (‚ÇΩ):",
            min_value=1.0,
            max_value=100000.0,
            step=10.0,
            value=100.0,
            help="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞"
        )
    
    with col2:
        st.empty()
    
    # –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
    if wallet_info and amount > 0:
        current_balance = float(wallet_info.get('balance', 0))
        new_balance = current_balance + amount
        avg_cost = wallet_info.get('average_analysis_cost', 1.0)
        
        if avg_cost > 0:
            new_analyses_available = int(new_balance // avg_cost)
            st.info(f"üí° –ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —É –≤–∞—Å –±—É–¥–µ—Ç {format_currency(new_balance)} (–ø—Ä–∏–º–µ—Ä–Ω–æ {new_analyses_available} –∞–Ω–∞–ª–∏–∑–æ–≤)")
    
    submitted = st.form_submit_button("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", use_container_width=True, type="primary")
    
    if submitted and amount > 0:
        try:
            with st.spinner(f"üí≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ {format_currency(amount)}..."):
                response = api_client.credit_wallet(amount)
                
            st.success(f"‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {format_currency(amount)}!")
            
            # –û—á–∏—â–∞–µ–º –∫–µ—à –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            SessionManager.clear_cache()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏
            if response:
                st.info(f"üßæ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {response.get('transaction_id', 'N/A')}")
            
            st.balloons()  # –ê–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞
            st.rerun()
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {str(e)}")

st.markdown("---")

# –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
st.markdown("### üìä –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")

transactions_data = load_transaction_history()
transactions = transactions_data.get("transactions", [])

if transactions:
    # –§–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    with st.expander("üîß –§–∏–ª—å—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", expanded=False):
        col1, col2, col3 = st.columns(3)
        
        with col1:
            tx_type_filter = st.multiselect(
                "üí∞ –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏:",
                ['CREDIT', 'DEBIT'],
                default=[],
                format_func=lambda x: {'CREDIT': 'üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', 'DEBIT': 'üí∏ –°–ø–∏—Å–∞–Ω–∏–µ'}[x],
                help="–§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"
            )
        
        with col2:
            date_range = st.date_input(
                "üìÖ –ü–µ—Ä–∏–æ–¥:",
                value=[],
                help="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"
            )
        
        with col3:
            limit_transactions = st.selectbox(
                "üìä –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–µ–π:",
                [10, 25, 50, 100],
                index=2,
                help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"
            )
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    filtered_transactions = transactions.copy()
    
    if tx_type_filter:
        filtered_transactions = [t for t in filtered_transactions if t['tx_type'] in tx_type_filter]
    
    if len(date_range) == 2:
        start_date, end_date = date_range
        filtered_transactions = [
            t for t in filtered_transactions 
            if start_date <= datetime.fromisoformat(t['trans_time'].replace('Z', '+00:00')).date() <= end_date
        ]
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    filtered_transactions = filtered_transactions[:limit_transactions]
    
    if filtered_transactions:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
        total_credit = sum([float(t['amount']) for t in filtered_transactions if t['tx_type'] == 'CREDIT'])
        total_debit = sum([float(t['amount']) for t in filtered_transactions if t['tx_type'] == 'DEBIT'])
        net_amount = total_credit - total_debit
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric("üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è", format_currency(total_credit))
        with col2:
            st.metric("üí∏ –°–ø–∏—Å–∞–Ω–∏—è", format_currency(total_debit))
        with col3:
            st.metric(
                "üìä –ë–∞–ª–∞–Ω—Å –æ–ø–µ—Ä–∞—Ü–∏–π",
                format_currency(net_amount),
                delta=format_currency(net_amount)
            )
        
        # –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        st.markdown("#### üìã –°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π")
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        table_data = []
        for transaction in filtered_transactions:
            table_data.append({
                'ID': transaction.get('id', 'N/A'),
                '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è': format_datetime(transaction.get('trans_time', '')),
                '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏': 'üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' if transaction['tx_type'] == 'CREDIT' else 'üí∏ –°–ø–∏—Å–∞–Ω–∏–µ',
                '–°—É–º–º–∞': format_currency(float(transaction.get('amount', 0))),
                '–ü–æ–¥–ø–∏—Å–∞–Ω–Ω–∞—è —Å—É–º–º–∞': f"+{transaction['amount']}" if transaction['tx_type'] == 'CREDIT' else f"-{transaction['amount']}"
            })
        
        df = pd.DataFrame(table_data)
        
        st.dataframe(
            df[['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏', '–°—É–º–º–∞']],
            use_container_width=True,
            hide_index=True,
            column_config={
                "–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏": st.column_config.TextColumn("–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏", width="medium"),
                "–°—É–º–º–∞": st.column_config.TextColumn("–°—É–º–º–∞", width="small"),
            }
        )
        
        
        # –≠–∫—Å–ø–æ—Ä—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        st.markdown("#### üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
        
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üìÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV", use_container_width=True):
                csv_data = df.to_csv(index=False)
                st.download_button(
                    label="üíæ –°–∫–∞—á–∞—Ç—å CSV",
                    data=csv_data,
                    file_name=f"transactions_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv",
                    mime="text/csv",
                    use_container_width=True
                )
        
        with col2:
            if st.button("üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞", use_container_width=True):
                report_text = f"""
–û–¢–ß–ï–¢ –ü–û –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–ú –ö–û–®–ï–õ–¨–ö–ê
============================

–ü–µ—Ä–∏–æ–¥: {date_range[0] if len(date_range) > 0 else '–ù–µ —É–∫–∞–∑–∞–Ω'} - {date_range[1] if len(date_range) > 1 else '–ù–µ —É–∫–∞–∑–∞–Ω'}
–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

–°–í–û–î–ö–ê:
-------
–í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: {len(filtered_transactions)}
–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π: {format_currency(total_credit)}
–°–ø–∏—Å–∞–Ω–∏–π: {format_currency(total_debit)}
–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –æ–ø–µ—Ä–∞—Ü–∏–π: {format_currency(net_amount)}

–î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø:
------------
{chr(10).join([f"{t.get('trans_time', 'N/A')[:19]} | {t['tx_type']} | {t.get('amount', 0)}‚ÇΩ" for t in filtered_transactions])}
"""
                
                st.download_button(
                    label="üíæ –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç",
                    data=report_text,
                    file_name=f"wallet_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt",
                    mime="text/plain",
                    use_container_width=True
                )
    
    else:
        st.info("üì≠ –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º")

else:
    st.info("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    st.markdown("üí° –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π!")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
with st.sidebar:
    if st.button("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", use_container_width=True):
        st.switch_page("app.py")
    
    st.markdown("---")
    st.markdown("### üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ")
    
    if wallet_info:
        balance = float(wallet_info.get('balance', 0))
        st.metric("üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å", format_currency(balance))
        
        # –ü—Ä–æ–≥–Ω–æ–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤
        avg_cost = wallet_info.get('average_analysis_cost', 0)
        if avg_cost > 0:
            remaining_analyses = int(balance // avg_cost)
            st.write(f"**üìä –î–æ—Å—Ç—É–ø–Ω–æ –∞–Ω–∞–ª–∏–∑–æ–≤:** ~{remaining_analyses}")
    
    
    st.markdown("### üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
    st.success("""
    **‚úÖ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:**
    
    ‚Ä¢ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è
    
    ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏
    
    ‚Ä¢ –ó–∞—â–∏—â–µ–Ω–Ω–æ–µ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    
    ‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
    """)
    
    st.markdown("### ‚öôÔ∏è –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    
    if st.button("üìù –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", use_container_width=True):
        st.switch_page("pages/New_Analysis.py")
    
    if st.button("üìã –ò—Å—Ç–æ—Ä–∏—è", use_container_width=True):
        st.switch_page("pages/History.py")
    
    if st.button("üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", use_container_width=True):
        st.switch_page("app.py")
    
    # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.markdown("### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    st.text(f"""
–í–∞–ª—é—Ç–∞: RUB (‚ÇΩ)
–ö–æ–º–∏—Å—Å–∏—è: 0%
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1‚ÇΩ
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 100,000‚ÇΩ
    """)