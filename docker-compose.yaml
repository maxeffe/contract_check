services:
  app:
    build: ./app/
    image: contract_checker_app
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
  web-proxy:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - db

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq
    restart: on-failure

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: on-failure

  ml-worker-1:
    build: ./app/
    image: contract_checker_app
    command: python ml_worker.py worker-1
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  ml-worker-2:
    build: ./app/
    image: contract_checker_app
    command: python ml_worker.py worker-2
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  ml-worker-3:
    build: ./app/
    image: contract_checker_app
    command: python ml_worker.py worker-3
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure


volumes:
  postgres_volume:
  rabbitmq_volume:
